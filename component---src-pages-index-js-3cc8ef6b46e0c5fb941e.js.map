{"version":3,"sources":["webpack:///./src/components/CardPost.js","webpack:///./src/pages/index.js","webpack:///./site-config.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/site-theme.js","webpack:///./src/components/CardProfile.js","webpack:///./src/components/SiteFooter.js","webpack:///./src/components/SiteHeader.js","webpack:///./src/components/Layout.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["CardHover","styled","div","withConfig","displayName","componentId","BoxCover","Box","CardPost","props","react_default","a","createElement","gatsby_browser_entry","to","link","style","boxShadow","textDecoration","textColor","round","elevation","background","margin","top","bottom","right","left","cover","basis","fill","image","pad","Heading","level","title","Text","dangerouslySetInnerHTML","htmlExcerpt","size","date","BlogIndex","render","siteTitle","get","this","siteDescription","posts","Layout","location","Helmet_default","htmlAttributes","lang","meta","name","content","map","_ref","node","fields","slug","key","frontmatter","__html","excerpt","childImageSharp","fluid","src","Component","pageQuery","module","exports","description","siteUrl","footerText","author","authorImage","authorBio","social","twitter","github","reddit","googleAnalyticsTrackingId","font","fontHeadings","brandColor","backgroundColor","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","siteTheme","global","family","siteConfig","colors","brand","heading","CardProfile","direction","height","width","Image","fit","alt","weight","length","Button","href","icon","Twitter","Github","Reddit","Markdown","SiteFooter","align","SiteHeader","textAlign","color","injectGlobal","_templateObject","Grommet","theme","minHeight","responsive","createHTML","url","$export","fails","defined","quot","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split"],"mappings":"qOASMA,EAAYC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,0BAMTK,EAAWL,YAAOM,KAAVJ,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,4HAOCO,EAAA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACZ,EAAD,KACEU,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEC,GAAIL,EAAMM,KACVC,MAAO,CACLC,UAAW,OACXC,eAAgB,OAChBC,UAAW,SAGbT,EAAAC,EAAAC,cAACL,EAAA,EAAD,CACEa,MAAM,QACNC,UAAU,QACVC,WAAW,UACXC,OAAQ,CACNC,IAAK,QACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,UAGPlB,EAAMmB,MAAQ,EACb,GAEAlB,EAAAC,EAAAC,cAACN,EAAD,CACEuB,MAAM,SACNC,KAAK,OACLR,WAAY,CAAES,MAAK,OAAStB,EAAMmB,MAAf,OAIvBlB,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKyB,IAAI,UACPtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAASV,OAAO,SAASW,MAAM,KAC5BzB,EAAM0B,OAETzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,wBAAyB5B,EAAM6B,cACrC5B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMb,OAAQ,CAAEC,IAAK,SAAWe,KAAK,SAClC9B,EAAM+B,iECrDjBC,4FACJC,kBACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAkBF,IACtBC,KACA,4CAEIE,EAAQH,IAAIC,KAAM,sCAExB,OACEnC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAQC,SAAUJ,KAAKpC,MAAMwC,UAC3BvC,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CACEwC,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAAST,IACvCX,MAAOQ,IAETjC,EAAAC,EAAAC,cAAA,YACGmC,EAAMS,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNvB,EAAQS,IAAIc,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACElD,EAAAC,EAAAC,cAAA,OAAKiD,IAAKH,EAAKC,OAAOC,MACQ,OAA3BF,EAAKI,YAAYlC,MAChBlB,EAAAC,EAAAC,cAACJ,EAAD,CACEO,KAAM2C,EAAKC,OAAOC,KAElBhC,MAAM,GACNO,MAAOA,EACPK,KAAMkB,EAAKI,YAAYtB,KACvBF,YAAa,CAAEyB,OAAQL,EAAKM,WAG9BtD,EAAAC,EAAAC,cAACJ,EAAD,CACEO,KAAM2C,EAAKC,OAAOC,KAClBhC,MAAO8B,EAAKI,YAAYlC,MAAMqC,gBAAgBC,MAAMC,IAEpDhC,MAAOA,EACPK,KAAMkB,EAAKI,YAAYtB,KACvBF,YAAa,CAAEyB,OAAQL,EAAKM,oBArCxBI,aAmDXC,GAFE5B,YAEO,gCC3DtB6B,EAAOC,QAAU,CAKfpC,MAAO,iCACPqC,YAAa,wDACbC,QAAS,yDACTC,WACE,+EAGFC,OAAQ,aACRC,YACE,+EACFC,UACE,oSACFC,OAAQ,CACNC,QAAS,UACTC,OAAQ,UACRC,OAAQ,WAIVC,0BAAyB,4BAGzBC,KAAM,SACNC,aAAc,eACdC,WAAY,UACZC,gBAAiB,0CC9BnBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAzF,IAAA4E,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,IAAAA,EAAAG,EAAAD,EAAA,uCAAAY,EAAA,QAAAC,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAS,EAAAM,GAAAf,EAAAG,EAAAD,EAAA,iCAAAc,EAAA5F,IAAA,IAAA6F,EAAAjB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAe,EAAA,IAaA,IAAMZ,EAAqBa,IAAMC,cAAc,IAEzCb,EAAc,SAAApF,GAAK,OACvBsF,EAAApF,EAAAC,cAACgF,EAAmBe,SAApB,KACG,SAAAC,GACC,OACEnG,EAAMoG,MACLD,EAAgBnG,EAAMqG,QAAUF,EAAgBnG,EAAMqG,OAAOD,MAEtDpG,EAAMiC,QAAUjC,EAAMsG,UAC5BtG,EAAMoG,KAAOpG,EAAMoG,KAAKA,KAAOD,EAAgBnG,EAAMqG,OAAOD,MAGvDd,EAAApF,EAAAC,cAAA,uCAaf,SAAS+E,IACP,MAAM,IAAIqB,MACR,gVATJnB,EAAYoB,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxB3E,OAAQwE,IAAUI,KAClBP,SAAUG,IAAUI,2BCpCtB,IAAsBC,EAKpBjD,EAAOC,SALagD,EAKWC,EAAQ,OALRD,EAAEE,SAAYF,oGCMzCG,EAAmB,SAAAjE,GAAkB,IAAfR,EAAeQ,EAAfR,SACpB0E,EAAgBC,UAAOC,4BAA4B5E,EAAS6E,UAClE,OAAOrB,IAAM7F,cAAcmH,IAApBC,OAAAC,OAAA,CACLhF,WACA0E,iBACGA,EAAcO,QAIrBR,EAAiBT,UAAY,CAC3BhE,SAAUiE,IAAUiB,MAAM,CACxBL,SAAUZ,IAAUE,OAAOC,aAC1BA,YAGUK,iICjBFU,EAAY,CACvBC,OAAQ,CACNlD,KAAM,CACJmD,OAAQC,IAAWpD,MAErBqD,OAAQ,CACNC,MAAOF,IAAWlD,aAGtBqD,QAAS,CACPvD,KAAM,CACJmD,OAAQC,IAAWnD,+ECTVuD,EAAA,kBACbjI,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKa,MAAM,QAAQY,IAAI,SAAST,OAAO,QAAQD,WAAW,WACxDZ,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKqI,UAAU,OACblI,EAAAC,EAAAC,cAACL,EAAA,EAAD,CACEyB,IAAK,CACHR,IAAK,OACLC,OAAQ,SACRC,MAAO,SACPC,KAAM,QAERP,MAAM,QACNyH,OAAO,SACPC,MAAM,UAENpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACEC,IAAI,UACJ7G,MAAOoG,IAAW5D,OAClBsE,IAAKV,IAAW5D,OAChBR,IAAKoE,IAAW3D,eAGpBlE,EAAAC,EAAAC,cAACL,EAAA,EAAD,KACEG,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAM8G,OAAO,OAAO3G,KAAK,QAAQhB,OAAQ,CAAEI,KAAM,UAC9C4G,IAAW5D,QAEdjE,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKqI,UAAU,OACZL,IAAWzD,OAAOC,QAAQoE,OAAS,EAClCzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CACEC,KAAI,uBAAyBd,IAAWzD,OAAOC,QAC/CuE,KAAM5I,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAShH,KAAK,YAGtB,GAGDgG,IAAWzD,OAAOE,OAAOmE,OAAS,EACjCzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CACEC,KAAI,sBAAwBd,IAAWzD,OAAOE,OAC9CsE,KAAM5I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAQjH,KAAK,YAGrB,GAGDgG,IAAWzD,OAAOG,OAAOkE,OAAS,EACjCzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CACEC,KAAI,2BAA6Bd,IAAWzD,OAAOG,OACnDqE,KAAM5I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAQlH,KAAK,YAGrB,MAKR7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMG,KAAK,SACT7B,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KAAWnB,IAAW1D,eC1D9B8E,EAAA,WAAe,OACbjJ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKe,WAAW,UAAUU,IAAI,QAAQ4H,MAAM,UAC1ClJ,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KAAWnB,IAAW7D,iCCFbmF,EAAA,kBACbnJ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKgB,OAAO,SACVb,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEG,MAAO,CACLC,UAAW,OACXC,eAAgB,QAElBJ,GAAG,KAEHJ,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAS6H,UAAU,SAASC,MAAM,QAAQxI,OAAO,SAC9CgH,IAAWpG,QAGhBzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAM0H,UAAU,SAASC,MAAM,SAC5BxB,IAAW/D,iNCTpBwF,YAAYC,KAaZxE,EAAA,WAAehF,GACb,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAASC,MAAO/B,GACd1H,EAAAC,EAAAC,cAACL,EAAA,EAAD,CACEe,WAAYiH,IAAWjD,gBACvBtE,MAAO,CAAEoJ,UAAW,SACpBC,YAAU,EACV9I,OAAO,QACPqI,MAAM,UAENlJ,EAAAC,EAAAC,cAACiJ,EAAD,MACAnJ,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKqI,UAAU,kBACblI,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKuI,MAAM,SAASrI,EAAMsG,UAC1BrG,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAKuI,MAAM,UACTpI,EAAAC,EAAAC,cAAC+H,EAAD,UAKRjI,EAAAC,EAAAC,cAAC+I,EAAD,2CC5CRpE,EAAQ,IAARA,CAAwB,gBAAA+E,GACxB,gBAAAC,GACA,OAAAD,EAAAzH,KAAA,WAAA0H,2BCJA,IAAAC,EAAcjF,EAAQ,GACtBkF,EAAYlF,EAAQ,IACpBmF,EAAcnF,EAAQ,IACtBoF,EAAA,KAEAL,EAAA,SAAAlD,EAAAwD,EAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAN,EAAAtD,IACA6D,EAAA,IAAAL,EAEA,MADA,KAAAC,IAAAI,GAAA,IAAAJ,EAAA,KAAAG,OAAAF,GAAAI,QAAAP,EAAA,UAA0F,KAC1FM,EAAA,IAAAF,EAAA,KAAAH,EAAA,KAEAtG,EAAAC,QAAA,SAAA4G,EAAAC,GACA,IAAAC,EAAA,GACAA,EAAAF,GAAAC,EAAAd,GACAE,IAAAc,EAAAd,EAAAe,EAAAd,EAAA,WACA,IAAAe,EAAA,GAAAL,GAAA,KACA,OAAAK,MAAAC,eAAAD,EAAAE,MAAA,KAAAvC,OAAA,IACG,SAAAkC","file":"component---src-pages-index-js-3cc8ef6b46e0c5fb941e.js","sourcesContent":["import { Box, Heading, Text } from 'grommet'\nimport { Link } from 'gatsby'\nimport React from 'react'\nimport styled from 'styled-components'\n\n// Target another styled component on hover\n// https://www.styled-components.com/docs/advanced#referring-to-other-components\n// Psuedoelements, psuedoselectors, and nesting\n// https://www.styled-components.com/docs/basics#psuedoelements-psuedoselectors-and-nesting\nconst CardHover = styled.div`\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nconst BoxCover = styled(Box)`\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n  border-bottom-right-radius: 0px;\n  border-bottom-left-radius: 0px;\n`\n\nexport default props => {\n  return (\n    <article>\n      <CardHover>\n        <Link\n          to={props.link}\n          style={{\n            boxShadow: 'none',\n            textDecoration: 'none',\n            textColor: 'none'\n          }}\n        >\n          <Box\n            round='small'\n            elevation='small'\n            background='light-1'\n            margin={{\n              top: 'small',\n              bottom: 'medium',\n              right: 'small',\n              left: 'small'\n            }}\n          >\n            {props.cover < 1 ? (\n              ''\n            ) : (\n              <BoxCover\n                basis='medium'\n                fill='true'\n                background={{ image: `url(${props.cover})` }}\n              />\n            )}\n\n            <Box pad='medium'>\n              <Heading margin='xsmall' level='2'>\n                {props.title}\n              </Heading>\n              <Text dangerouslySetInnerHTML={props.htmlExcerpt} />\n              <Text margin={{ top: 'small' }} size='small'>\n                {props.date}\n              </Text>\n            </Box>\n          </Box>\n        </Link>\n      </CardHover>\n    </article>\n  )\n}\n","import { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport React, { Component } from 'react'\nimport get from 'lodash/get'\n\nimport CardPost from '../components/CardPost'\nimport Layout from '../components/Layout'\n\nclass BlogIndex extends Component {\n  render () {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        <main>\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug\n            return (\n              <div key={node.fields.slug}>\n                {node.frontmatter.cover === null ? (\n                  <CardPost\n                    link={node.fields.slug}\n                    // cover={node.frontmatter.cover.childImageSharp.fluid.src}\n                    cover=''\n                    title={title}\n                    date={node.frontmatter.date}\n                    htmlExcerpt={{ __html: node.excerpt }}\n                  />\n                ) : (\n                  <CardPost\n                    link={node.fields.slug}\n                    cover={node.frontmatter.cover.childImageSharp.fluid.src}\n                    // cover=\"/stop.jpg\"\n                    title={title}\n                    date={node.frontmatter.date}\n                    htmlExcerpt={{ __html: node.excerpt }}\n                  />\n                )}\n              </div>\n            )\n          })}\n        </main>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            cover {\n              childImageSharp {\n                fluid {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","module.exports = {\n  //\n  // Change information to your own:\n  //\n  // Site Info:\n  title: 'Gatsby Starter Blog Grommet v2',\n  description: 'This is a DEMO site! SSG - Gatsby JS, UI - Grommet v2',\n  siteUrl: 'https://ganevru.github.io/gatsby-starter-blog-grommet/',\n  footerText:\n    '**2018**<br><br>Go here: site-config.js, and replace this text with your own', // You can use Markdown markup here\n\n  // Blog Author Info:\n  author: 'Ivan Ganev',\n  authorImage:\n    'https://pbs.twimg.com/profile_images/986603715732934656/7A4Nt68k_400x400.jpg',\n  authorBio:\n    \"Hello, I'm Ivan Ganev and I made this blog starter for Gatsby js using UI Grommet v2. <br><br>Repo of this starter: [github.com/ganevru/gatsby-starter-blog-grommet](https://github.com/ganevru/gatsby-starter-blog-grommet) <br><br>Go here: site-config.js, and replace this text with your own\", // You can use Markdown markup here\n  social: {\n    twitter: 'ganevru',\n    github: 'ganevru',\n    reddit: 'ganevru'\n  },\n\n  // Services:\n  googleAnalyticsTrackingId: `ADD YOUR TRACKING ID HERE`,\n\n  // Site Style:\n  font: 'Roboto', // Roboto\n  fontHeadings: 'Merriweather', // Merriweather\n  brandColor: '#7D4CDB', // #7D4CDB\n  backgroundColor: '#fff' // #fff\n\n  // TODO:\n  // pathPrefix: null,\n  // logo: path.resolve(__dirname, 'src/images/icon.png')\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import siteConfig from '../site-config'\n\n// https://github.com/grommet/grommet/wiki/Grommet-v2-theming-documentation\n// https://github.com/grommet/grommet/tree/NEXT/src/js/themes\nexport const siteTheme = {\n  global: {\n    font: {\n      family: siteConfig.font\n    },\n    colors: {\n      brand: siteConfig.brandColor\n    }\n  },\n  heading: {\n    font: {\n      family: siteConfig.fontHeadings\n    }\n  }\n}\n","import { Box, Button, Image, Markdown, Text } from 'grommet'\nimport { Github, Reddit, Twitter } from 'grommet-icons'\nimport React from 'react'\n\nimport siteConfig from '../../site-config'\n\nexport default () => (\n  <section>\n    <Box round='small' pad='medium' margin='small' background='light-2'>\n      <Box direction='row'>\n        <Box\n          pad={{\n            top: 'none',\n            bottom: 'medium',\n            right: 'medium',\n            left: 'none'\n          }}\n          round='large'\n          height='xsmall'\n          width='xsmall'\n        >\n          <Image\n            fit='contain'\n            title={siteConfig.author}\n            alt={siteConfig.author}\n            src={siteConfig.authorImage}\n          />\n        </Box>\n        <Box>\n          <Text weight='bold' size='large' margin={{ left: 'small' }}>\n            {siteConfig.author}\n          </Text>\n          <Box direction='row'>\n            {siteConfig.social.twitter.length > 1 ? (\n              <Button\n                href={`https://twitter.com/${siteConfig.social.twitter}`}\n                icon={<Twitter size='small' />}\n              />\n            ) : (\n              ''\n            )}\n\n            {siteConfig.social.github.length > 1 ? (\n              <Button\n                href={`https://github.com/${siteConfig.social.github}`}\n                icon={<Github size='small' />}\n              />\n            ) : (\n              ''\n            )}\n\n            {siteConfig.social.reddit.length > 1 ? (\n              <Button\n                href={`https://reddit.com/user/${siteConfig.social.reddit}`}\n                icon={<Reddit size='small' />}\n              />\n            ) : (\n              ''\n            )}\n          </Box>\n        </Box>\n      </Box>\n      <Text size='small'>\n        <Markdown>{siteConfig.authorBio}</Markdown>\n      </Text>\n    </Box>\n  </section>\n)\n","import { Box, Markdown } from 'grommet'\nimport React from 'react'\n\nimport siteConfig from '../../site-config'\n\nexport default () => (\n  <footer>\n    <Box background='light-2' pad='large' align='center'>\n      <Markdown>{siteConfig.footerText}</Markdown>\n    </Box>\n  </footer>\n)\n","import { Box, Heading, Text } from 'grommet'\nimport { Link } from 'gatsby'\nimport React from 'react'\n\nimport siteConfig from '../../site-config'\n\nexport default () => (\n  <header>\n    <Box margin='small'>\n      <Link\n        style={{\n          boxShadow: 'none',\n          textDecoration: 'none'\n        }}\n        to='/'\n      >\n        <Heading textAlign='center' color='brand' margin='small'>\n          {siteConfig.title}\n        </Heading>\n      </Link>\n      <Text textAlign='center' color='brand'>\n        {siteConfig.description}\n      </Text>\n    </Box>\n  </header>\n)\n","import { Box, Grommet } from 'grommet'\nimport { injectGlobal } from 'styled-components'\nimport React from 'react'\n\nimport siteConfig from '../../site-config'\n\nimport { siteTheme } from '../site-theme'\n\nimport CardProfile from './CardProfile'\nimport SiteFooter from './SiteFooter'\nimport SiteHeader from './SiteHeader'\n\ninjectGlobal`\n  img {\n    border-radius: 14px;\n    max-width: 100%;\n  }\n  body {\n    margin: 0;\n  }\n  a:hover {\n    opacity: 0.9;\n  }\n`\n\nexport default props => {\n  return (\n    <div>\n      <Grommet theme={siteTheme}>\n        <Box\n          background={siteConfig.backgroundColor}\n          style={{ minHeight: '100vh' }}\n          responsive\n          margin='small'\n          align='center'\n        >\n          <SiteHeader />\n          <Box direction='row-responsive'>\n            <Box width='large'>{props.children}</Box>\n            <aside>\n              <Box width='medium'>\n                <CardProfile />\n              </Box>\n            </aside>\n          </Box>\n        </Box>\n        <SiteFooter />\n      </Grommet>\n    </div>\n  )\n}\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}